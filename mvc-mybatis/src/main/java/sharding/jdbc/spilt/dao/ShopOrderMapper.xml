<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="sharding.jdbc.spilt.dao.ShopOrderMapper">
    <resultMap id="BaseResultMap" type="sharding.jdbc.spilt.bean.ShopOrder">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="order_sn" property="orderSn" jdbcType="VARCHAR"/>
        <result column="add_time" property="addTime" jdbcType="TIMESTAMP"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="total_pay" property="totalPay" jdbcType="INTEGER"/>
        <result column="pay_time" property="payTime" jdbcType="TIMESTAMP"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="order_type" property="orderType" jdbcType="TINYINT"/>
        <result column="order_status" property="orderStatus" jdbcType="TINYINT"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, order_sn, add_time, user_id, total_pay, pay_time, address, email, phone, order_type, 
    order_status
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="sharding.jdbc.spilt.bean.ShopOrderExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from shop_order
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from shop_order
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from shop_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="sharding.jdbc.spilt.bean.ShopOrderExample">
        delete from shop_order
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="sharding.jdbc.spilt.bean.ShopOrder">
    insert into shop_order (id, order_sn, add_time, 
      user_id, total_pay, pay_time, 
      address, email, phone, 
      order_type, order_status)
    values (#{id,jdbcType=INTEGER}, #{orderSn,jdbcType=VARCHAR}, #{addTime,jdbcType=TIMESTAMP}, 
      #{userId,jdbcType=INTEGER}, #{totalPay,jdbcType=INTEGER}, #{payTime,jdbcType=TIMESTAMP}, 
      #{address,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{orderType,jdbcType=TINYINT}, #{orderStatus,jdbcType=TINYINT})
  </insert>
    <insert id="insertSelective" parameterType="sharding.jdbc.spilt.bean.ShopOrder">
        insert into shop_order
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="orderSn != null">
                order_sn,
            </if>
            <if test="addTime != null">
                add_time,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="totalPay != null">
                total_pay,
            </if>
            <if test="payTime != null">
                pay_time,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="orderType != null">
                order_type,
            </if>
            <if test="orderStatus != null">
                order_status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="orderSn != null">
                #{orderSn,jdbcType=VARCHAR},
            </if>
            <if test="addTime != null">
                #{addTime,jdbcType=TIMESTAMP},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="totalPay != null">
                #{totalPay,jdbcType=INTEGER},
            </if>
            <if test="payTime != null">
                #{payTime,jdbcType=TIMESTAMP},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="orderType != null">
                #{orderType,jdbcType=TINYINT},
            </if>
            <if test="orderStatus != null">
                #{orderStatus,jdbcType=TINYINT},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="sharding.jdbc.spilt.bean.ShopOrderExample"
            resultType="java.lang.Integer">
        select count(*) from shop_order
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <select id="getShopOrderList" resultMap="BaseResultMap">
        select * from shop_order
        <where>
            <if test="list != null and list != '' and list.size > 0">
                id in
                <foreach collection="list" open="(" close=")" separator="," item="id">
                    #{id}
                </foreach>
            </if>
        </where>
    </select>
    <select id="getOrder" resultMap="BaseResultMap">
    select * from shop_order where id =#{id} and user_id =#{userId} and email = #{email}
  </select>
    <select id="getProductInfos" resultType="sharding.jdbc.spilt.bean.OrderProductInfo">
      select
      so.id,
      so.order_sn orderSn,
      so.add_time addTime,
      so.user_id userId,
      so.total_pay totalPay,
      sop.product_id productId,
      sop.product_name productName ,
      sop.product_sn productSn ,
      sop.product_money productMoney
      from shop_order so left join shop_order_product sop on so.id=sop.order_id where so.user_id=#{userId}
    </select>
    <select id="getProductInfoCrossDb" resultType="sharding.jdbc.spilt.bean.OrderProductInfo">
         select
      so.id,
      so.order_sn orderSn,
      so.add_time addTime,
      so.user_id userId,
      so.total_pay totalPay,
      sop.product_id productId,
      sop.product_name productName ,
      sop.product_sn productSn ,
      sop.product_money productMoney
      from shop_order so left join db02.shop_order_product_2 sop on so.id=sop.order_id where so.user_id=#{userId}
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update shop_order
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.orderSn != null">
                order_sn = #{record.orderSn,jdbcType=VARCHAR},
            </if>
            <if test="record.addTime != null">
                add_time = #{record.addTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=INTEGER},
            </if>
            <if test="record.totalPay != null">
                total_pay = #{record.totalPay,jdbcType=INTEGER},
            </if>
            <if test="record.payTime != null">
                pay_time = #{record.payTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.address != null">
                address = #{record.address,jdbcType=VARCHAR},
            </if>
            <if test="record.email != null">
                email = #{record.email,jdbcType=VARCHAR},
            </if>
            <if test="record.phone != null">
                phone = #{record.phone,jdbcType=VARCHAR},
            </if>
            <if test="record.orderType != null">
                order_type = #{record.orderType,jdbcType=TINYINT},
            </if>
            <if test="record.orderStatus != null">
                order_status = #{record.orderStatus,jdbcType=TINYINT},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update shop_order
        set id = #{record.id,jdbcType=INTEGER},
        order_sn = #{record.orderSn,jdbcType=VARCHAR},
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
        user_id = #{record.userId,jdbcType=INTEGER},
        total_pay = #{record.totalPay,jdbcType=INTEGER},
        pay_time = #{record.payTime,jdbcType=TIMESTAMP},
        address = #{record.address,jdbcType=VARCHAR},
        email = #{record.email,jdbcType=VARCHAR},
        phone = #{record.phone,jdbcType=VARCHAR},
        order_type = #{record.orderType,jdbcType=TINYINT},
        order_status = #{record.orderStatus,jdbcType=TINYINT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="sharding.jdbc.spilt.bean.ShopOrder">
        update shop_order
        <set>
            <if test="orderSn != null">
                order_sn = #{orderSn,jdbcType=VARCHAR},
            </if>
            <if test="addTime != null">
                add_time = #{addTime,jdbcType=TIMESTAMP},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="totalPay != null">
                total_pay = #{totalPay,jdbcType=INTEGER},
            </if>
            <if test="payTime != null">
                pay_time = #{payTime,jdbcType=TIMESTAMP},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="orderType != null">
                order_type = #{orderType,jdbcType=TINYINT},
            </if>
            <if test="orderStatus != null">
                order_status = #{orderStatus,jdbcType=TINYINT},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="sharding.jdbc.spilt.bean.ShopOrder">
    update shop_order
    set order_sn = #{orderSn,jdbcType=VARCHAR},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=INTEGER},
      total_pay = #{totalPay,jdbcType=INTEGER},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      address = #{address,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      order_type = #{orderType,jdbcType=TINYINT},
      order_status = #{orderStatus,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>